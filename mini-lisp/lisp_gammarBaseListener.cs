//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from lisp_gammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="Ilisp_gammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class lisp_gammarBaseListener : Ilisp_gammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] lisp_gammarParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] lisp_gammarParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] lisp_gammarParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] lisp_gammarParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.print_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint_stmt([NotNull] lisp_gammarParser.Print_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.print_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint_stmt([NotNull] lisp_gammarParser.Print_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExp([NotNull] lisp_gammarParser.ExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExp([NotNull] lisp_gammarParser.ExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBool([NotNull] lisp_gammarParser.BoolContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.bool"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBool([NotNull] lisp_gammarParser.BoolContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum([NotNull] lisp_gammarParser.NumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.num"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum([NotNull] lisp_gammarParser.NumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.num_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNum_op([NotNull] lisp_gammarParser.Num_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.num_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNum_op([NotNull] lisp_gammarParser.Num_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus([NotNull] lisp_gammarParser.PlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.plus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus([NotNull] lisp_gammarParser.PlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.minus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinus([NotNull] lisp_gammarParser.MinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.minus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinus([NotNull] lisp_gammarParser.MinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.multiply"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply([NotNull] lisp_gammarParser.MultiplyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.multiply"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply([NotNull] lisp_gammarParser.MultiplyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivide([NotNull] lisp_gammarParser.DivideContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.divide"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivide([NotNull] lisp_gammarParser.DivideContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.modulus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModulus([NotNull] lisp_gammarParser.ModulusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.modulus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModulus([NotNull] lisp_gammarParser.ModulusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.greater"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGreater([NotNull] lisp_gammarParser.GreaterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.greater"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGreater([NotNull] lisp_gammarParser.GreaterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.smaller"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSmaller([NotNull] lisp_gammarParser.SmallerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.smaller"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSmaller([NotNull] lisp_gammarParser.SmallerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.equal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqual([NotNull] lisp_gammarParser.EqualContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.equal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqual([NotNull] lisp_gammarParser.EqualContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.logical_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_op([NotNull] lisp_gammarParser.Logical_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.logical_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_op([NotNull] lisp_gammarParser.Logical_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.and_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_op([NotNull] lisp_gammarParser.And_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.and_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_op([NotNull] lisp_gammarParser.And_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.or_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_op([NotNull] lisp_gammarParser.Or_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.or_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_op([NotNull] lisp_gammarParser.Or_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.not_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot_op([NotNull] lisp_gammarParser.Not_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.not_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot_op([NotNull] lisp_gammarParser.Not_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.def_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDef_stmt([NotNull] lisp_gammarParser.Def_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.def_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDef_stmt([NotNull] lisp_gammarParser.Def_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] lisp_gammarParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] lisp_gammarParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_exp([NotNull] lisp_gammarParser.Fun_expContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_exp([NotNull] lisp_gammarParser.Fun_expContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_IDs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_IDs([NotNull] lisp_gammarParser.Fun_IDsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_IDs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_IDs([NotNull] lisp_gammarParser.Fun_IDsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_body([NotNull] lisp_gammarParser.Fun_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_body([NotNull] lisp_gammarParser.Fun_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_call([NotNull] lisp_gammarParser.Fun_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_call([NotNull] lisp_gammarParser.Fun_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] lisp_gammarParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] lisp_gammarParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_name([NotNull] lisp_gammarParser.Fun_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_name([NotNull] lisp_gammarParser.Fun_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.if_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_exp([NotNull] lisp_gammarParser.If_expContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.if_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_exp([NotNull] lisp_gammarParser.If_expContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.test_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTest_exp([NotNull] lisp_gammarParser.Test_expContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.test_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTest_exp([NotNull] lisp_gammarParser.Test_expContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.than_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThan_exp([NotNull] lisp_gammarParser.Than_expContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.than_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThan_exp([NotNull] lisp_gammarParser.Than_expContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.else_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_exp([NotNull] lisp_gammarParser.Else_expContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.else_exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_exp([NotNull] lisp_gammarParser.Else_expContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
