//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from lisp_gammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="lisp_gammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface Ilisp_gammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] lisp_gammarParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] lisp_gammarParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] lisp_gammarParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] lisp_gammarParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.print_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_stmt([NotNull] lisp_gammarParser.Print_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.print_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_stmt([NotNull] lisp_gammarParser.Print_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExp([NotNull] lisp_gammarParser.ExpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExp([NotNull] lisp_gammarParser.ExpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] lisp_gammarParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] lisp_gammarParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum([NotNull] lisp_gammarParser.NumContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum([NotNull] lisp_gammarParser.NumContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.num_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNum_op([NotNull] lisp_gammarParser.Num_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.num_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNum_op([NotNull] lisp_gammarParser.Num_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.plus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlus([NotNull] lisp_gammarParser.PlusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.plus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlus([NotNull] lisp_gammarParser.PlusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.minus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinus([NotNull] lisp_gammarParser.MinusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.minus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinus([NotNull] lisp_gammarParser.MinusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.multiply"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiply([NotNull] lisp_gammarParser.MultiplyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.multiply"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiply([NotNull] lisp_gammarParser.MultiplyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.divide"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivide([NotNull] lisp_gammarParser.DivideContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.divide"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivide([NotNull] lisp_gammarParser.DivideContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.modulus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModulus([NotNull] lisp_gammarParser.ModulusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.modulus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModulus([NotNull] lisp_gammarParser.ModulusContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.greater"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreater([NotNull] lisp_gammarParser.GreaterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.greater"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreater([NotNull] lisp_gammarParser.GreaterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.smaller"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSmaller([NotNull] lisp_gammarParser.SmallerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.smaller"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSmaller([NotNull] lisp_gammarParser.SmallerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual([NotNull] lisp_gammarParser.EqualContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual([NotNull] lisp_gammarParser.EqualContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.logical_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogical_op([NotNull] lisp_gammarParser.Logical_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.logical_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogical_op([NotNull] lisp_gammarParser.Logical_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.and_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_op([NotNull] lisp_gammarParser.And_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.and_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_op([NotNull] lisp_gammarParser.And_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.or_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_op([NotNull] lisp_gammarParser.Or_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.or_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_op([NotNull] lisp_gammarParser.Or_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.not_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_op([NotNull] lisp_gammarParser.Not_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.not_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_op([NotNull] lisp_gammarParser.Not_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDef_stmt([NotNull] lisp_gammarParser.Def_stmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.def_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDef_stmt([NotNull] lisp_gammarParser.Def_stmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] lisp_gammarParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] lisp_gammarParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_exp([NotNull] lisp_gammarParser.Fun_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_exp([NotNull] lisp_gammarParser.Fun_expContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_IDs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_IDs([NotNull] lisp_gammarParser.Fun_IDsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_IDs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_IDs([NotNull] lisp_gammarParser.Fun_IDsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_body([NotNull] lisp_gammarParser.Fun_bodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_body([NotNull] lisp_gammarParser.Fun_bodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_call([NotNull] lisp_gammarParser.Fun_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_call([NotNull] lisp_gammarParser.Fun_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] lisp_gammarParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] lisp_gammarParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.fun_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_name([NotNull] lisp_gammarParser.Fun_nameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.fun_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_name([NotNull] lisp_gammarParser.Fun_nameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.if_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_exp([NotNull] lisp_gammarParser.If_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.if_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_exp([NotNull] lisp_gammarParser.If_expContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.test_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTest_exp([NotNull] lisp_gammarParser.Test_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.test_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTest_exp([NotNull] lisp_gammarParser.Test_expContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.than_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThan_exp([NotNull] lisp_gammarParser.Than_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.than_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThan_exp([NotNull] lisp_gammarParser.Than_expContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="lisp_gammarParser.else_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse_exp([NotNull] lisp_gammarParser.Else_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="lisp_gammarParser.else_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse_exp([NotNull] lisp_gammarParser.Else_expContext context);
}
